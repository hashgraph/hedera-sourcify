{
  "bytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806341304fac1461003b578063eefbf17e14610060575b600080fd5b61004e6100493660046100ca565b610069565b60405190815260200160405180910390f35b61004e60005481565b6000805460405181907f48197b8eaf01bc9d46384d798a981a4537fc58dcd35ece37054dddbba8418edf906100a1908790879061013c565b60405180910390a260016000808282546100bb919061016b565b90915550909150505b92915050565b600080602083850312156100dd57600080fd5b823567ffffffffffffffff808211156100f557600080fd5b818501915085601f83011261010957600080fd5b81358181111561011857600080fd5b86602082850101111561012a57600080fd5b60209290920196919550909350505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b808201808211156100c457634e487b7160e01b600052601160045260246000fdfea2646970667358221220d47692de99253af8b2a9835fa8c6cde8d7f24fe3a76c340c9b9462e24144124264736f6c63430008130033",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.19;\r\n\r\n/**\r\n * @notice Simply logs strings\r\n */\r\ncontract SimplyLog {\r\n    /**\r\n     * @notice The ID of the next message to be logged\r\n     */\r\n    uint256 public nextMessageId = 0;\r\n    event Log(uint256 indexed messageId, string message);\r\n    \r\n    /**\r\n     * @notice Log a message.\r\n     * @param message Message to log\r\n     * @return message id that was logged\r\n     */\r\n    function log(string calldata message) public returns (uint256) {\r\n        uint256 messageId = nextMessageId;\r\n        emit Log(messageId, message);\r\n        nextMessageId += 1;\r\n        return messageId;\r\n    }\r\n}"
}
