nameoOverride: ""
fullnameOverride: ""
imagePullSecrets: []

serverRepository:
  ## Deploy sourcify server-repository
  enabled: true

  ## Confiure server-repository for autoscailing
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

  ## Set server-repository replica count
  replicaCount: 1

  ## server-repository annotations and deployment configurations
  annotations: {}
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []

  ## Annotations and securityContext for server-repository pods
  podAnnotations: {}
  podSecurityContext: {}

  ## server-repository service configuration
  service:
    server:
      type: "ClusterIP"
      port: 5555
    repository:
      type: "ClusterIP"
      port: 80

  ## server-repository image configuration, image repository is defined in the global image section above
  image:
    server:
      repository: ghcr.io/hashgraph/hedera-sourcify/server
      tag: "test"
    repository:
      repository: ghcr.io/hashgraph/hedera-sourcify/repository
      tag: "test"
    pullPolicy: "IfNotPresent"

  ## server-repository serviceAccount creation and configuration
  serviceAccount:
    create: true
    annotations: {}
    name: "server-repository"

  ## server-repository ingress creation and configuration
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: ""
        paths: []
    tls: []

  ## server-repository persistent volume claim configuration
  persistence:
    enabled: false
    ## server-repository persistent volume size
    size: 100Gi
    ## server-repository persistent volume storage class - setting nil based on best practices [here](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#writing-portable-configuration)
    storageClass: "nil"
    ## server-repository persistent volume access mode
    accessMode: "ReadWriteOnce"

  ## Configurations for the server-repository containers
  config:
    REPOSITORY_PATH: "/data"
    SERVER_URL: "http://127.0.0.1:5555"
    REPOSITORY_SERVER_URL: "http://127.0.0.1:10000"
    TESTING: true
    NODE_ENV: "development"
    UI_DOMAIN_NAME: verify.example.com
    repository:
      {
      "SERVER_URL": "http://127.0.0.1:5555",
      "REPOSITORY_SERVER_URL": "http://127.0.0.1:10000",
      "EXPLORER_URL": "http://127.0.0.1:8080",
      }
    servers:
      - description: The current REST API server
        url: ""
      - description: The production REST API server
        url: "https://server-verify.hashscan.io"
      - description: The staging REST API server
        url: "https://server-sourcify.hedera-devops.com"
      - description: Local development server address on default port 5555
        url: "http://localhost:5555"
    sourcifyChains:
      {
        "295": {
          "sourcifyName": "Hedera Mainnet",
          "supported": true
        },
        "296": {
          "sourcifyName": "Hedera Testnet",
          "supported": true
        },
        "297": {
          "sourcifyName": "Hedera Previewnet",
          "supported": true
        }
      }
ui:
  ## Deploy sourcify ui
  enabled: true

  ## Confiure ui for autoscailing
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

  ## Set ui replica count
  replicaCount: 1

  ## UI annotations and deployment configurations
  annotations: {}
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []

  ## Annotations and securityContext for ui pods
  podAnnotations: {}
  podSecurityContext: {}

  ## UI service configuration
  service:
    type: "ClusterIP"
    port: 443

  ## UI image configuration, image repository is defined in the global image section above
  image:
    repository: ghcr.io/hashgraph/hedera-sourcify/ui
    tag: "test"
    pullPolicy: "IfNotPresent"

  ## UI serviceAccount creation and configuration
  serviceAccount:
    create: true
    annotations: {}
    name: "ui"

  ## UI ingress creation and configuration
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: ""
        paths: []
    tls: []

## Configurations for the UI container
  config:
    {
    "SERVER_URL": "http://127.0.0.1:5555",
    "REPOSITORY_SERVER_URL": "http://127.0.0.1:10000",
    "EXPLORER_URL": "http://127.0.0.1:8080",
    }

## Pod environment variables for UI
  env:
    UI_DOMAIN_NAME: "verify.example.com"

reset:
  ## Previewnet reset job, default is to disable
  previewnet_reset:
    enabled: false
  ## Testnet reset job, default is to disable
  testnet_reset:
    enabled: false
  ## Set default immage repository, tag, and pull policy
  image:
    repository: "bitnami/kubectl"
    tag: "1.28.7"
    pullPolicy: "IfNotPresent"
