nameoOverride: ""
fullnameOverride: ""
imagePullSecrets: []
image:
  repository: "ghcr.io/hashgraph/hedera-sourcify"

serverRepository:
  ## Deploy sourcify server-repository
  enabled: true

  ## Confiure server-repository for autoscailing
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

  ## Set server-repository replica count
  replicaCount: 1

  ## server-repository annotations and deployment configurations
  annotations: {}
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []

  ## Annotations and securityContext for server-repository pods
  podAnnotations: {}
  podSecurityContext: {}

  ## server-repository service configuration
  service:
    server:
      type: "ClusterIP"
      port: 5555
    repository:
      type: "ClusterIP"
      port: 80

  ## server-repository image configuration, image repository is defined in the global image section above
  image:
    server:
      tag: "server-latest"
    repository:
      tag: "repository-latest"  
    pullPolicy: "IfNotPresent"

  ## server-repository serviceAccount creation and configuration
  serviceAccount:
    create: true
    annotations: {}
    name: "server-repository"

  ## server-repository ingress creation and configuration
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: ""
        paths: []
    tls: []

  ## server-repository persistent volume claim configuration
  persistence:
    enabled: false
    ## server-repository persistent volume size
    size: 100Gi
    ## server-repository persistent volume storage class - setting nil based on best practices [here](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#writing-portable-configuration)
    storageClass: "nil"
    ## server-repository persistent volume access mode
    accessMode: "ReadWriteOnce"

  ## Configurations for the server-repository containers
  config:
    REPOSITORY_PATH: "/data"
    SERVER_URL: "http://sourcify-server:5555"
    REPOSITORY_SERVER_URL: "http://sourcify-repository"
    TESTING: true
    NODE_ENV: "development"
    UI_DOMAIN_NAME: sourcify.example.com
    repository:
      {
      "SERVER_URL": "http://sourcify-server:5555",
      "REPOSITORY_SERVER_URL": "http://sourcify-repository:10000",
      "HASHSCAN_URL": "http://127.0.0.1:8080",
      }

repository:
  ## Deploy sourcify repository
  enabled: false

  ## Confiure repository for autoscailing
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

  ## Set repository replica count
  replicaCount: 1

  ## repository annotations and deployment configurations
  annotations: {}
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []

  ## Annotations and securityContext for repository pods
  podAnnotations: {} 
  podSecurityContext: {}

  ## Repository service configuration
  service:
    type: "ClusterIP"
    port: 443

  ## Repository image configuration, image repository is defined in the global image section above
  image:
    tag: "repository-latest"
    pullPolicy: "IfNotPresent"

  ## Repository serviceAccount creation and configuration
  serviceAccount:
    create: true
    annotations: {}
    name: "repository"

  ## Repository ingress creation and configuration
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: ""
        paths: []
    tls: []

server:
  ## Deploy sourcify server
  enabled: false

  ## Confiure server for autoscailing
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

  ## Set server replica count
  replicaCount: 1

  ## server annotations and deployment configurations
  annotations: {}
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []

  ## Annotations and securityContext for server pods
  podAnnotations: {}
  podSecurityContext: {}

  ## Server service configuration
  service:
    type: "ClusterIP"
    port: 443

  ## Server image configuration, image repository is defined in the global image section above
  image:
    tag: "server-latest"
    pullPolicy: "IfNotPresent"

  ## Server serviceAccount creation and configuration
  serviceAccount:
    create: true
    annotations: {}
    name: "server"

  ## Server ingress creation and configuration
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: ""
        paths: []
    tls: []

  ## Server persistent volume configuration
  persistence:
    enabled: false
    ## Server persistent volume size
    size: 100Gi
    ## Server persistent volume storage class
    storageClass: "standard"
    ## Server persistent volume access mode
    accessMode: "ReadWriteOnce"

ui:
  ## Deploy sourcify ui
  enabled: true

  ## Confiure ui for autoscailing
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

  ## Set ui replica count
  replicaCount: 1

  ## UI annotations and deployment configurations
  annotations: {}
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []

  ## Annotations and securityContext for ui pods
  podAnnotations: {}
  podSecurityContext: {}

  ## UI service configuration
  service:
    type: "ClusterIP"
    port: 443

  ## UI image configuration, image repository is defined in the global image section above
  image:
    tag: "ui-latest"
    pullPolicy: "IfNotPresent"

  ## UI serviceAccount creation and configuration
  serviceAccount:
    create: true
    annotations: {}
    name: "ui"

  ## UI ingress creation and configuration
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: ""
        paths: []
    tls: []

## Configurations for the UI container
  config:
    {
    "SERVER_URL": "http://sourcify-server:5555",
    "REPOSITORY_SERVER_URL": "http://sourcify-repository:10000",
    "HASHSCAN_URL": "http://127.0.0.1:8080",
    }

## Pod environment variables for UI
  env:
    UI_DOMAIN_NAME: "sourcify.example.com"

monitor:
  ## Deploy sourcify monitor
  enabled: false

  ## Confiure monitor for autoscailing
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

  ## Set monitor replica count
  replicaCount: 1

  ## monitor annotations and deployment configurations
  annotations: {}
  resources: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []

  ## Annotations and securityContext for monitor pods
  podAnnotations: {}
  podSecurityContext: {}

  ## Monitor service configuration
  service:
    type: "ClusterIP"
    port: 443

  ## Monitor image configuration, image repository is defined in the global image section above
  image:
    tag: "monitor-latest"
    pullPolicy: "IfNotPresent"

  ## Monitor serviceAccount creation and configuration
  serviceAccount:
    create: true
    annotations: {}
    name: "monitor"
    