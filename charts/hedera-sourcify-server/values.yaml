# Default values for hedera-sourcify-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

affinity: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Environment variables to add to the container. The value can either be a string or an EnvVarSource. Evaluated as a template.
env:
  # FOO:
  #   valueFrom:
  #     secretKeyRef:
  #       name: '{{ .Release.Name }}-custom'
  #       key: BAR

fullnameOverride: ""

image:
  # update to forked image
  repository: svienot/source-verify
  tag: server-latest

imagePullSecrets: []

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nameOverride: ""

networkPolicy:
  enabled: false
  
nodeSelector: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

replicaCount: 1

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

tolerations: []

# Volumes to add to the container. The key is the volume name and the value is the volume mount definition. The same keys should also appear in volumes below.
volumeMounts:
  config:
    mountPath: /usr/etc/hedera
  repository:
    mountPath: /home/data/repository
    name: repository
  linuxSolcBin:
    mountPath: /home/data/solc-bin/linux-amd64
    name: server-claim1
  solJson:
    mountPath: /home/data/solc-bin/soljson
    name: server-claim2

# Volume mounts to add to the container. The key is the volume name and the value is the volume definition. Evaluated as a template.
volumes:
  config:
    secret:
      defaultMode: 420
      secretName: '{{ include "hedera-sourcify-server.fullname" . }}'
  repository:
    name: repository
    persistentVolumeClaim:
      claimName: repository
  linuxSolcBin:
    name: server-claim1
    persistentVolumeClaim:
      claimName: server-claim1
  solJson:
    name: server-claim2
    persistentVolumeClaim:
      claimName: server-claim2
