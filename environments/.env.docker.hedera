###
### USE THIS TO DEPLOY UI, SERVER & REPOSITORY RUNNING AS DOCKER CONTAINERS
### NOTE:
### - to deploy on a server, replace all occurences of 'localhost' by the fully qualified hostname
### - to deploy on a Mac, use 5555 instead of 5000 for the server port
###

# Server config
## Path where verified contracts will be saved
## WARNING: DO NOT CHANGE THIS VALUE. It is currently used both as mount point
## and as the path inside server container
REPOSITORY_PATH=../../data/repository
## Path where Solidity compiler binaries will be saved (inside container)
SOLC_REPO=/home/data/solc-bin/linux-amd64
## Path where Solidity JS (solc-js) compilers will be saved (inside container)
SOLJSON_REPO=/home/data/solc-bin/soljson
## Server port inside the docker container
SERVER_PORT=80
## The fully qualified domain name of the host running the ui
## used by Server to configure allowed origins for CORS
UI_DOMAIN_NAME=localhost

## Note:
##  - the 'ui' and 'repository' services no longer use the following environment variables
##    but instead read their runtime config from their config.json file. This can be a mount point
##    provided to the docker container (see environments/docker-compose-hedera.yaml for example)
##    and defaults to the file statically included at build time (resp. ui/public/config.json and
##    h5ai-nginx/select-contract-form/public/config.json)
##  - the 'server' uses the REPOSITORY_SERVER_URL env variable to return links to the various
##    contract files.
#SERVER_URL=http://localhost:5000
REPOSITORY_SERVER_URL=http://localhost:10000

# Docker config
## Where to mount the downloaded compilers directory on the host machine
SOLC_REPO_HOST=../../data/solc-bin/linux-amd64
SOLJSON_REPO_HOST=../../data/solc-bin/soljson
## Ports to access containers from the host
SERVER_EXTERNAL_PORT=5000
UI_EXTERNAL_PORT=1234
REPOSITORY_SERVER_EXTERNAL_PORT=10000

# Other config
TESTING=false
TAG=latest
NODE_ENV=production

# Needed to call create2 APIs, format is: TOKEN1,TOKEN2,...
CREATE2_CLIENT_TOKENS=
