###
### USE THIS FOR DEPLOYMENT ON POC SERVER (assumes running with nginx reverse proxy on specific domain)
###

# Server config
## Path where verified contracts will be saved
## WARNING: DO NOT CHANGE THIS VALUE. It is currently used both as mount point
## and as the path inside server container
REPOSITORY_PATH=../../data/repository
## Path where Solidity compiler binaries will be saved (inside container)
SOLC_REPO=/home/data/solc-bin/linux-amd64
## Path where Solidity JS (solc-js) compilers will be saved (inside container)
SOLJSON_REPO=/home/data/solc-bin/soljson
SERVER_PORT=80
## The fully qualified domain name of the host running the ui
## used by Server to configure allowed origins for CORS
UI_DOMAIN_NAME=verify.simonvienot.fr

# Repository web server config
REPOSITORY_SERVER_PORT=10000

# UI config
## The URL used by the UI service to contact the server
SERVER_URL=https://verify.simonvienot.fr/server
## The URL used by the UI service to coontact the repository
REPOSITORY_SERVER_URL=https://repo.verify.simonvienot.fr

# Docker config
## Where to mount the downloaded compilers directory on the host machine
SOLC_REPO_HOST=../../data/solc-bin/linux-amd64
SOLJSON_REPO_HOST=../../data/solc-bin/soljson
## Ports to access containers from the host
SERVER_EXTERNAL_PORT=5000
UI_EXTERNAL_PORT=1234
REPOSITORY_SERVER_EXTERNAL_PORT=10000

# Other config
TESTING=false
TAG=latest
NODE_ENV=development

# Needed to call create2 APIs, format is: TOKEN1,TOKEN2,...
CREATE2_CLIENT_TOKENS=TESTTOKEN
